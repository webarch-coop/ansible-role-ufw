# Copyright 2020-2025 Luke Murphy and Chris Croome
#
# This file is part of the Webarchitects Uncomplicated Firewall (UFW) Ansible role.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Uncomplicated Firewall (UFW) Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Verify variables starting with ufw_
  block:

    - name: Debug the hostvars variable names that start with ufw_
      ansible.builtin.debug:
        var: ufwvarnames
        verbosity: "{% if ansible_check_mode | bool %}3{% else %}4{% endif %}"
      tags:
        - debug

    - name: Debug the hostvars variable names that start with ufw_
      ansible.builtin.debug:
        var: ufwhostvars
        verbosity: "{% if ansible_check_mode | bool %}3{% else %}4{% endif %}"
      tags:
        - debug

    - name: Set a fact for the argument spec and internal argument spec
      ansible.builtin.set_fact:
        ufw_argument_spec: "{{ (lookup('ansible.builtin.file', 'meta/argument_specs.yml') | from_yaml) }}"
        ufw_internal_argument_spec: "{{ (lookup('ansible.builtin.file', 'meta/internal_argument_specs.yml') | from_yaml) }}"

    - name: Set a fact for the combined argument spec and internal argument spec
      ansible.builtin.set_fact:
        ufw_combined_argument_spec: "{{ ufw_argument_spec | ansible.builtin.combine(ufw_internal_argument_spec, recursive=true) }}"

    - name: Debug ufw_app_existing_conf
      ansible.builtin.debug:
        var: ufw_app_existing_conf
      when: ufw_app_existing_conf is defined

    - name: Check ufw_ variables using the combined argument spec
      ansible.builtin.validate_argument_spec:
        argument_spec: "{{ ufw_combined_argument_spec['argument_specs']['main']['options'] }}"
        provided_arguments: "{{ ufwhostvars }}"

  when: ufw_verify | bool
  tags:
    - ufw
...

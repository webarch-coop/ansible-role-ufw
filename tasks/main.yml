# Copyright 2020-2025 Luke Murphy and Chris Croome
#
# This file is part of the Webarchitects Uncomplicated Firewall (UFW) Ansible role.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Uncomplicated Firewall (UFW) Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Skip the tasks in this role
  ansible.builtin.debug:
    msg: "The UFW role tasks are not being run since the ufw variable is false."
  when: not ufw | bool
  tags:
    - ufw

- name: Install and configure UFW
  block:

    - name: Verify variables that start with ufw_
      ansible.builtin.include_tasks: verify.yml
      when:
        - ufw_verify is defined
        - ufw_verify | bool

    - name: Include apt tasks
      ansible.builtin.include_tasks: apt.yml

    - name: Include the UFW check tasks
      ansible.builtin.include_tasks: checks.yml

    # TODO
    # - name: UFW applications absent
    #   ansible.builtin.include_tasks: app_absent.yml
    #   vars:
    #     ufw_app_desc_jpq: "[?key=='{{ ufw_app.app }}'].value|[0].description"
    #     ufw_app_ports_jpq: "[?key=='{{ ufw_app.app }}'].value|[0].ports"
    #   loop: "{{ ufw_apps }}"
    #   loop_control:
    #     loop_var: ufw_app
    #     label: "{{ ufw_app.app }}"
    #   when:
    #     - ufw_apps is defined
    #     - ufw_apps != []
    #     - ufw_app.state == "absent"

    - name: Debug UFW applications that need adding or updating
      ansible.builtin.debug:
        msg:
          # - "JMESPath description query: {{ ufw_app_desc_jpq }}"
          # - "JMESPath ports query: {{ ufw_app_ports_jpq }}"
          - "UFW proposed app: {{ ufw_app.app }}"
          - "UFW proposed app desc: {{ ufw_app.desc }}"
          - "UFW proposed app ports: {{ ufw_app.ports }}"
          - "UFW proposed app state: {{ ufw_app.state }}"
          - "UWF existing app description: {{ ufw_apps_available_list | community.general.json_query(ufw_app_desc_jpq) }}"
          - "UFW existing app ports: {{ ufw_apps_available_list | community.general.json_query(ufw_app_ports_jpq) }}"
          # - "UFW ufw_app: {{ ufw_app | ansible.builtin.to_nice_yaml }}"
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      vars:
        ufw_app_desc_jpq: "[?key=='{{ ufw_app.app }}'].value|[0].description"
        ufw_app_ports_jpq: "[?key=='{{ ufw_app.app  }}'].value|[0].ports"
      loop: "{{ ufw_apps }}"
      loop_control:
        loop_var: ufw_app
        label: "{{ ufw_app.app }}"
      when:
        - ufw_apps is defined
        - ufw_apps != []
        - ufw_app.state == "present"
        - >-
          (ufw_app.desc != ufw_apps_available_list | community.general.json_query(ufw_app_desc_jpq)) or
          (ufw_app.ports != ufw_apps_available_list | community.general.json_query(ufw_app_ports_jpq))
      tags:
        - debug

    - name: UFW applications present
      ansible.builtin.include_tasks: app_present.yml
      vars:
        ufw_app_desc_jpq: "[?key=='{{ ufw_app.app }}'].value|[0].description"
        ufw_app_ports_jpq: "[?key=='{{ ufw_app.app }}'].value|[0].ports"
      loop: "{{ ufw_apps }}"
      loop_control:
        loop_var: ufw_app
        label: "{{ ufw_app.app }}"
      when:
        - ufw_apps is defined
        - ufw_apps != []
        - ufw_app.state == "present"
        - >-
          (ufw_app.desc != ufw_apps_available_list | community.general.json_query(ufw_app_desc_jpq)) or
          (ufw_app.ports != ufw_apps_available_list | community.general.json_query(ufw_app_ports_jpq))

    - name: Include UFW config tasks
      ansible.builtin.include_tasks: config.yml
      loop: "{{ ufw_config }}"
      loop_control:
        loop_var: ufw_conf
        label: "{{ ufw_conf.path }}"
      when:
        - ufw_config is defined
        - ufw_config != {}

    - name: Reset UFW to ensure no rules are present
      community.general.ufw:
        state: reset
      tags:
        - molecule-idempotence-notest

    - name: Include allow tasks
      ansible.builtin.include_tasks: allow.yml
      loop: "{{ ufw_allow_rules }}"
      loop_control:
        loop_var: ufw_rule
      when:
        - ufw_allow_rules is defined
        - ufw_allow_rules != []

    - name: Include deny tasks
      ansible.builtin.include_tasks: deny.yml
      loop: "{{ ufw_deny_rules }}"
      loop_control:
        loop_var: ufw_rule
      when:
        - ufw_deny_rules is defined
        - ufw_deny_rules != []

    - name: Policy deny
      community.general.ufw:
        policy: deny
        direction: incoming
      notify: Restart ufw
      when:
        - ufw_default_policy_deny is defined
        - ufw_default_policy_deny | bool
      tags:
        - molecule-idempotence-notest

    - name: Get the UFW status
      ansible.builtin.command: ufw status
      check_mode: false
      changed_when: false
      register: ufw_check_status

    - name: Debug UFW status
      ansible.builtin.debug:
        var: ufw_check_status.stdout
      tags:
        - debug

  when: ufw | bool
  tags:
    - ufw
...

# Copyright 2020-2023 Luke Murphy and Chris Croome
#
# This file is part of the Webarchitects Uncomplicated Firewall (UFW) Ansible role.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Uncomplicated Firewall (UFW) Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Install and configure UFW
  block:

    - name: Verify variables that start with ufw_
      ansible.builtin.include_tasks: verify.yml
      when:
        - ufw_verify is defined
        - ufw_verify | bool

    - name: Include apt role local fact tasks
      ansible.builtin.include_role:
        name: apt
        tasks_from: local_facts.yml
      when: >-
        ( ansible_local.dpkg.arch is not defined ) or
        ( ansible_local.gpg.version is not defined ) or
        ( ansible_local.bash.path is not defined )

    - name: UFW packages present
      ansible.builtin.apt:
        pkg: "{{ ufw_pkgs }}"
        state: present
      when:
        - ufw_pkgs is defined
        - ufw_pkgs != []
        - ufw_pkgs | difference(ansible_local.dpkg.installed) != []

    - name: Include the UFW check tasks
      ansible.builtin.include_tasks: checks.yml

    - name: UFW applications present
      ansible.builtin.include_tasks: app.yml
      loop: "{{ ufw_apps }}"
      loop_control:
        loop_var: ufw_app
        label: "{{ ufw_app.app }}"
      when:
        - ufw_apps is defined
        - ufw_apps != []

    - name: Include UFW config tasks
      ansible.builtin.include_tasks: config.yml
      loop: "{{ ufw_config }}"
      loop_control:
        loop_var: ufw_conf
        label: "{{ ufw_conf.path }}"
      when:
        - ufw_config is defined
        - ufw_config != {}

    - name: Policy deny
      community.general.ufw:
        policy: deny
        direction: incoming
      notify: Restart ufw
      when:
        - ufw_default_policy_deny is defined
        - ufw_default_policy_deny | bool

    - name: Include allow tasks
      ansible.builtin.include_tasks: allow.yml
      loop: "{{ ufw_allow_rules }}"
      loop_control:
        loop_var: ufw_rule
      when:
        - ufw_allow_rules is defined
        - ufw_allow_rules != []

    - name: Include deny tasks
      ansible.builtin.include_tasks: deny.yml
      loop: "{{ ufw_deny_rules }}"
      loop_control:
        loop_var: ufw_rule
      when:
        - ufw_deny_rules is defined
        - ufw_deny_rules != []

    - name: Enable the firewall
      community.general.ufw:
        state: enabled
      notify: Restart ufw

  when: ufw | bool
  tags:
    - ufw
...

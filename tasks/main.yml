# Copyright 2020-2023 Luke Murphy and Chris Croome
#
# This file is part of the Webarchitects Uncomplicated Firewall (UFW) Ansible role.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Uncomplicated Firewall (UFW) Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Install and configure UFW
  block:

    - name: Install ufw
      ansible.builtin.apt:
        pkg:
          - ufw
        state: present
        update_cache: true

    - name: Get the UFW status
      ansible.builtin.command: ufw status
      check_mode: false
      changed_when: false
      register: ufw_check_status

    - name: Set a fact for the UFW status
      ansible.builtin.set_fact:
        ufw_status: "{{ ufw_check_status.stdout | string | community.general.jc('ufw') }}"

    - name: Debug UFW status
      ansible.builtin.debug:
        var: ufw_status
        verbosity: 2

    - name: Policy deny
      community.general.ufw:
        policy: deny
        direction: incoming
      notify: Restart ufw
      when:
        - ufw_default_policy_deny is defined
        - ufw_default_policy_deny | bool

    - name: Include allow tasks
      ansible.builtin.include_tasks: allow.yml
      loop: "{{ ufw_allow_rules }}"
      loop_control:
        loop_var: ufw_rule
      when:
        - ufw_allow_rules is defined
        - ufw_allow_rules != []

    - name: Include deny tasks
      ansible.builtin.include_tasks: deny.yml
      loop: "{{ ufw_deny_rules }}"
      loop_control:
        loop_var: ufw_rule
      when:
        - ufw_deny_rules is defined
        - ufw_deny_rules != []

    - name: Enable the firewall
      community.general.ufw:
        state: enabled
      notify: Restart ufw

  when: ufw | bool
  tags:
    - ufw
...

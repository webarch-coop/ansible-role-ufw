# Copyright 2020-2023 Luke Murphy and Chris Croome
#
# This file is part of the Webarchitects Uncomplicated Firewall (UFW) Ansible role.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Uncomplicated Firewall (UFW) Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: UFW application file
  block:

    - name: Debug UFW proposed app variables
      ansible.builtin.debug:
        var: ufw_app
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Set a variable for the existing app configuration
      ansible.builtin.set_fact:
        ufw_app_existing_conf: "{{ ufw_apps_available | community.general.json_query(ufw_app.app) | default(null) }}"
      when:
        - ufw_apps_available is defined
        - ufw_apps_available != {}

    - name: Set a variable for the app default path
      ansible.builtin.set_fact:
        ufw_app_default_path: "/etc/ufw/applications.d/{{ ufw_app.app | lower | ansible.builtin.regex_replace('[ ]-', '_') | ansible.builtin.regex_search('^[a-z0-9_]{1,18}') }}"

    - name: UFW application title configuration present
      community.general.ini_file:
        path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
        create: true
        mode: "0644"
        owner: root
        group: root
        no_extra_spaces: true
        section: "{{ ufw_app.app }}"
        option: title
        value: "{{ ufw_app.app }}"
      register: ufw_app_title
      when: >-
       ( ufw_app_existing_conf == "null" ) or
       ( ufw_app_existing_conf.title != ufw_app.app )

    - name: UFW application description configuration present
      community.general.ini_file:
        path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
        create: true
        mode: "0644"
        owner: root
        group: root
        no_extra_spaces: true
        section: "{{ ufw_app.app }}"
        option: description
        value: "{{ ufw_app.desc }}"
      register: ufw_app_description
      when: >-
       ( ufw_app_existing_conf == "null" ) or
       ( ufw_app_existing_conf.description != ufw_app.desc )

    - name: UFW application ports configuration present
      community.general.ini_file:
        path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
        create: true
        mode: "0644"
        owner: root
        group: root
        no_extra_spaces: true
        section: "{{ ufw_app.app }}"
        option: ports
        value: "{{ ufw_app.ports }}"
      register: ufw_app_ports
      when: >-
       ( ufw_app_existing_conf == "null" ) or
       ( ufw_app_existing_conf.ports != ufw_app.ports )

    - name: Check if the UFW application file exists
      ansible.builtin.stat:
        path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
      register: ufw_app_path

    - name: First, comment and last lines present in the UFW application file
      block:

        - name: Ansible managed comment present at the top of the file
          ansible.builtin.lineinfile:
            path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
            line: "# Ansible managed"
            state: present
            insertbefore: BOF
            mode: "0644"
            owner: root
            group: root

        - name: UFW comment present at the top of the file
          ansible.builtin.lineinfile:
            path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
            line: "# {{ ufw_app.comment }}"
            state: present
            insertafter: '^# Ansible managed$'
            mode: "0644"
            owner: root
            group: root
          when: ufw_app.comment is defined

        - name: Vim syntaxhighlighting modeline present at the end of the file
          ansible.builtin.lineinfile:
            path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
            line: "# vim: syntax=dosini"
            state: present
            insertafter: EOF
            mode: "0644"
            owner: root
            group: root

      when: ufw_app_path.stat.exists | bool

    - name: Check and register updated UFW application
      block:

        - name: UFW update application
          ansible.builtin.command: "ufw app update {{ ufw_app.path | basename }}"
          changed_when: true

        - name: Include the /etc/ufw/applications.d/* checks
          ansible.builtin.include_tasks: check_apps.yml

      when: >-
        ( ( ufw_app_title.changed is defined ) and ( ufw_app_title.changed | bool ) ) or
        ( ( ufw_app_description.changed is defined ) and ( ufw_app_description.changed | bool ) ) or
        ( ( ufw_app_ports.changed is defined ) and ( ufw_app_ports.changed | bool ) )

  tags:
    - ufw
...

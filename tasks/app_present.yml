# Copyright 2020-2025 Luke Murphy and Chris Croome
#
# This file is part of the Webarchitects Uncomplicated Firewall (UFW) Ansible role.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Uncomplicated Firewall (UFW) Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Uncomplicated Firewall (UFW) Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: UFW application file
  block:

    - name: Debug ufw_apps_available
      ansible.builtin.debug:
        var: ufw_apps_available
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      tags:
        - debug

    - name: Debug ufw_app
      ansible.builtin.debug:
        var: ufw_app
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      tags:
        - debug

    - name: Debug existing app configuration
      ansible.builtin.debug:
        msg: "{{ ufw_apps_available | community.general.json_query(ufw_apps_available_jpq) }}"
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      vars:
        ufw_apps_available_jpq: "{{ ufw_app.app | ansible.builtin.quote }}"
      tags:
        - debug

    - name: Set a variable for the existing app configuration
      ansible.builtin.set_fact:
        ufw_app_existing_conf: "{{ ufw_apps_available | community.general.json_query(ufw_apps_available_jpq) }}"
      vars:
        ufw_apps_available_jpq: "{{ ufw_app.app | ansible.builtin.quote }}"
      when:
        - ufw_apps_available is defined
        - ufw_apps_available != {}

    - name: Debug UFW existing app configuration
      ansible.builtin.debug:
        var: ufw_app_existing_conf
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      when: ufw_app_existing_conf is defined
      tags:
        - debug

    - name: Set a variable for the app default path and set ufw_app_title, ufw_app_description and ufw_app_ports to empty dicts
      ansible.builtin.set_fact:
        ufw_app_default_path: "/etc/ufw/applications.d/{{ ufw_app.app | lower | ansible.builtin.regex_replace(' ', '_') | ansible.builtin.regex_search('^[a-z0-9_]{1,24}') }}"
        ufw_app_description: {}
        ufw_app_ports: {}
        ufw_app_title: {}

    - name: Delete the app rule before updating the application
      community.general.ufw:
        name: "{{ ufw_app.app }}"
        default: "{{ ufw_status | community.general.json_query(ufw_app_rule_default_jpq) | lower }}"
        delete: true
      vars:
        ufw_app_rule_default_jpq: "rules[?to_service=={{ ufw_app.app | ansible.builtin.quote }}].action|[0]"
      when:
        - ufw_status is defined
        - ufw_apps_enabled is defined
        - ufw_apps_enabled != []
        - ufw_app.app in ufw_apps_enabled

    - name: UFW application title configuration present
      community.general.ini_file:
        path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
        create: true
        mode: "0644"
        owner: root
        group: root
        no_extra_spaces: true
        section: "{{ ufw_app.app }}"
        option: title
        value: "{{ ufw_app.app }}"
      register: ufw_app_title
      # when: >-
      #  (ufw_app_existing_conf is not defined) or
      #  (ufw_app_existing_conf == "null") or
      #  (ufw_app_existing_conf == "") or
      #  ((ufw_app_existing_conf.title is defined) and (ufw_app_existing_conf.title != ufw_app.app))

    - name: UFW application description configuration present
      community.general.ini_file:
        path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
        create: true
        mode: "0644"
        owner: root
        group: root
        no_extra_spaces: true
        section: "{{ ufw_app.app }}"
        option: description
        value: "{{ ufw_app.desc }}"
      register: ufw_app_description
      # when: >-
      #  (ufw_app_existing_conf is not defined) or
      #  (ufw_app_existing_conf == "null") or
      #  (ufw_app_existing_conf == "") or
      #  ((ufw_app_existing_conf.description is defined) and (ufw_app_existing_conf.description != ufw_app.desc))

    - name: UFW application ports configuration present
      community.general.ini_file:
        path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
        create: true
        mode: "0644"
        owner: root
        group: root
        no_extra_spaces: true
        section: "{{ ufw_app.app }}"
        option: ports
        value: "{{ ufw_app.ports }}"
      register: ufw_app_ports
      # when: >-
      #  (ufw_app_existing_conf is not defined) or
      #  (ufw_app_existing_conf == "null") or
      #  (ufw_app_existing_conf == "") or
      #  ((ufw_app_existing_conf.ports is defined) and (ufw_app_existing_conf.ports != ufw_app.ports))

    - name: Check if the UFW application file exists
      ansible.builtin.stat:
        path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
      register: ufw_app_path

    - name: First and last lines present in the UFW application file
      block:

        - name: Ansible managed comment present at the top of the file
          ansible.builtin.lineinfile:
            path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
            line: "# Ansible managed"
            state: present
            insertbefore: BOF
            mode: "0644"
            owner: root
            group: root

        - name: Vim syntaxhighlighting modeline present at the end of the file
          ansible.builtin.lineinfile:
            path: "{{ ufw_app.path | default(ufw_app_default_path) }}"
            line: "# vim: syntax=dosini"
            state: present
            insertafter: EOF
            mode: "0644"
            owner: root
            group: root

      when: ufw_app_path.stat.exists | bool

    - name: Check and register updated UFW application
      block:

        - name: UFW update application
          ansible.builtin.command: "ufw app update {{ ufw_app.path | default(ufw_app_default_path) | basename }}"
          changed_when: true

        - name: Include the /etc/ufw/applications.d/* checks
          ansible.builtin.include_tasks: check_apps.yml

      when: >-
        ((ufw_app_title.changed is defined) and (ufw_app_title.changed | bool)) or
        ((ufw_app_description.changed is defined) and (ufw_app_description.changed | bool)) or
        ((ufw_app_ports.changed is defined) and (ufw_app_ports.changed | bool))

  tags:
    - ufw
...
